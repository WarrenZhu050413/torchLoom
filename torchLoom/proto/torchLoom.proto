syntax = "proto3";

message RegisterDevice       { string device_uuid = 1; string process_id = 2; }
message ChangeConfigEvent    { map<string, string> config_params = 1; }

// Enum for basic message types for pipe communication
enum PipeMessageType {
  PIPE_MESSAGE_TYPE_UNSPECIFIED = 0; // Default value
  PIPE_COMMAND = 1;
  PIPE_TRAINING_STATUS = 2;
  PIPE_DEVICE_STATUS = 3;
}

// Enum for simple command types
enum PipeCommandType {
  PIPE_COMMAND_TYPE_UNSPECIFIED = 0; // Default value
  KILL = 1;
  PAUSE = 2;
  RESUME = 3;
  UPDATE_CONFIG = 4;
}

// Training status message for pipe communication
message PipeTrainingStatusMessage {
  PipeMessageType message_type = 1;
  int64 timestamp = 2; // Unix timestamp
  TrainingStatus training_status = 3;
}

// Device status message for pipe communication
message PipeDeviceStatusMessage {
  PipeMessageType message_type = 1;
  int64 timestamp = 2; // Unix timestamp
  deviceStatus device_status = 3;
}

// Config message for pipe communication
message PipeConfigMessage {
  PipeMessageType message_type = 1;
  int64 timestamp = 2; // Unix timestamp
  string process_id = 3;
  map<string, string> config_params = 4; // Using string for Any, to be parsed
}

// Command message for pipe communication
message PipeCommandMessage {
  PipeMessageType message_type = 1;
  int64 timestamp = 2; // Unix timestamp
  string process_id = 3;
  PipeCommandType command_type = 4;
  map<string, string> params = 5; // Using string for Any, to be parsed
}

// Heartbeat message for threadlet -> weaver
message Heartbeat {
  string process_id = 1;
  string device_uuid = 2;
  int64 timestamp = 3;               // Unix timestamp when heartbeat was sent
  string status = 4;                 // "active", "training", "idle"
  map<string, string> metadata = 5;  // Optional metadata (step, epoch, etc.)
}

// Training Process -> Weaver messages
message TrainingStatus {
  string process_id = 1;
  int64 current_step = 2;
  int64 epoch = 3;
  map<string, string> metrics = 4; // loss, accuracy, learning_rate, etc.
  float training_time = 5;        // Total training time in seconds
  int64 max_step = 6;
  int64 max_epoch = 7;
  map<string, string> config = 8; // Training config (lr, batch_size, optimizer, etc.)
  // repeated string process_group_id = 9;
  // Cluster-ID = 10
  // Time to first all-reduce = 11
}

message deviceStatus {
  string device_uuid = 1;
  string process_id = 2;          // To delete
  string server_id = 3;
  float utilization = 5;          // 0-100%
  float temperature = 6;          // Celsius
  float memory_used = 7;          // GB
  float memory_total = 8;         // GB
}

// Weaver -> UI messages
message UIStatusUpdate {
  repeated deviceStatus devices = 2;
  repeated TrainingStatus training_status = 3;
  int64 timestamp = 7;
}

// UI -> Weaver messages
message UICommand {
  string command_type = 1;  // "deactivate_device", "reactivate_group", "update_config", "pause_training", "resume_training"
  string target_id = 2;     // device_uuid or replica_group_id
  map<string, string> params = 3;
}

// Weaver -> Training Process messages
message WeaverCommand {
  string command_type = 1;  // "update_config", "pause", "resume", "stop"
  string target_process_id = 2;
  map<string, string> params = 3;
}

message EventEnvelope {
  uint64  seq      = 1;
  uint64  ts_nanos = 2;
  oneof body {
    RegisterDevice       register_device   = 9;
    ChangeConfigEvent    config_info       = 15;
    
    // Heartbeat
    Heartbeat           heartbeat          = 16;
    
    // Training Process -> Weaver
    TrainingStatus       training_status   = 17;
    deviceStatus           device_status         = 18;
    
    // UI <-> Weaver
    UICommand           ui_command         = 21;
    
    // Weaver -> Training Process
    WeaverCommand       weaver_command     = 23;

    // Pipe Messages
    PipeTrainingStatusMessage pipe_training_status = 24;
    PipeDeviceStatusMessage   pipe_device_status   = 25;
    PipeConfigMessage         pipe_config          = 26;
    PipeCommandMessage        pipe_command         = 27;
  }
}